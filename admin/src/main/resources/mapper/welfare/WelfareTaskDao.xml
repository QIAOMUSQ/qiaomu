<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">    
<mapper namespace="com.qiaomu.modules.welfare.dao.WelfareTaskDao">
	<resultMap id="pointForm" type="com.qiaomu.modules.welfare.model.PointRankForm">
		<result property="point" column="points"/>
		<result property="loginName" column="username"/>
		<result property="realName" column="real_name"/>
		<result property="userId" column="userId"/>

	</resultMap>
	<!-- 根据key，更新value -->
	<insert id="newTask" parameterType="com.qiaomu.modules.welfare.entity.TaskEntity" >
		insert into welfare_task (serviceId ,serviceName,seviceDetail,communityId,status,points,imageUrls,headUrl,createdAt,updatedAt) VALUES
		(#{serviceId} ,#{serviceName},#{seviceDetail},#{communityId},#{status},#{points},#{imageUrls},#{headUrl},#{createdAt},#{updatedAt})
	</insert>

	<insert id="newTaskUser" parameterType="com.qiaomu.modules.welfare.entity.TaskPublishUserEntity" >
		insert into welfare_task_publish_user (publishUserId ,serviceId,status,createdAt,updatedAt) VALUES
		(#{publishUserId} ,#{serviceId},#{status},#{createdAt},#{updatedAt})
	</insert>

	<insert id="newTaskRecevieUser" parameterType="com.qiaomu.modules.welfare.entity.TaskRecevieUserEntity" >
		insert into welfare_task_recevie_user (receiveUserId ,serviceId,status,createdAt,updatedAt) VALUES
		(#{receiveUserId} ,#{serviceId},#{status},#{createdAt},#{updatedAt})
	</insert>
	<select id="queryTaskByName" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskEntity">
		select * from welfare_task WHERE serviceName = #{serviceName} LIMIT 1
	</select>
	<insert id="newPonit" parameterType="com.qiaomu.modules.welfare.entity.TaskEntity" >
		insert into welfare_points_user (userId,points,createdAt,updatedAt) VALUES
		(#{userId} ,#{points},#{createdAt},#{updatedAt})
	</insert>

	<select id="queryAllTask" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskEntity">
		select * from welfare_task WHERE status="未领取" and communityId=#{communityId} ORDER  by createdAt Limit 100
	</select>
	<select id="queryTask" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskEntity">
		select * from welfare_task WHERE serviceId = #{serviceId}
	</select>
	<select id="queryPublishUserTask" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskPublishUserEntity">
		select * from welfare_task_publish_user WHERE serviceId = #{serviceId} Limit 1
	</select>
	<select id="queryPublishUserServices" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskEntity">
		select * from welfare_task where communityId=#{communityId} and serviceId in (select serviceId from welfare_task_publish_user where publishUserId=#{publishUserId} GROUP BY serviceId)
	</select>
	<select id="queryRecevieUserServices" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskEntity">
		select * from welfare_task where serviceId in (select serviceId from welfare_task_recevie_user where receiveUserId=#{receiveUserId} GROUP BY serviceId)
	</select>
	<select id="queryAllunReviewTask" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskEntity">
		select * from welfare_task where status="审核中" and serviceId in (select serviceId from welfare_task_publish_user where publishUserId=#{publishUserId}  and status="待审核" GROUP BY serviceId)
	</select>
	<select id="queryAllSubmitReviewTask" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskEntity">
		select * from welfare_task where status="审核中" and serviceId in (select serviceId from welfare_task_recevie_user where receiveUserId=#{receiveUserId}  and status="审核中" GROUP BY serviceId)
	</select>
	<select id="queryAllRuningTask1" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskEntity">
		select * from welfare_task where status="执行中" and
		serviceId in (select serviceId from welfare_task_publish_user where publishUserId=#{userId}  and status="执行中" GROUP BY serviceId)
	</select>
	<select id="queryAllRuningTask2" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskEntity">
		select * from welfare_task where status="执行中" and
		serviceId in (select serviceId from welfare_task_recevie_user where receiveUserId=#{userId}  and status="执行中" GROUP BY serviceId)
	</select>
	<select id="queryAllCompleteTask" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskEntity">
		select * from welfare_task where status="已完成" and
		(serviceId in (select serviceId from welfare_task_publish_user where publishUserId=#{userId}  and status="已完成" GROUP BY serviceId)
		OR
		serviceId in (select serviceId from welfare_task_recevie_user where receiveUserId=#{userId}  and status="已完成" GROUP BY serviceId))
	</select>
	<select id="queryPublishUserTaskLast" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskPublishUserEntity">
		select * from welfare_task_publish_user WHERE serviceId = #{serviceId} ORDER by createdAt DESC Limit 1
	</select>
	<select id="queryRecevieUserTask" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.TaskRecevieUserEntity">
		select * from welfare_task_recevie_user WHERE serviceId = #{serviceId} ORDER by createdAt DESC Limit 1
	</select>
	<select id="selectPonitByUserId" parameterType="String" resultType="com.qiaomu.modules.welfare.entity.PointEntity">
		select * from welfare_points_user WHERE userId=#{userId}
	</select>

	<select id="selectTopPointUser" parameterType="String" resultMap="pointForm">
		select  a.points ,a.userId,b.real_name from welfare_points_user as a JOIN yw_user_extend as b
		where a.userId=b.user_id and b.community_id=#{community_id}
		ORDER by ABS(a.points) DESC limit 20
</select>
	<update id="updateTask" parameterType="com.qiaomu.modules.welfare.entity.TaskEntity">
		update welfare_task set
		<if test="serviceName != null and serviceName !=''">
			serviceName = #{serviceName},
		</if>
		<if test="seviceDetail != null and seviceDetail !=''">
			seviceDetail = #{seviceDetail},
		</if>
		<if test="status != null and status !=''">
			status = #{status},
		</if>
		<if test="points != null and points !=''">
			points = #{points},
		</if>
		<if test="updatedAt != null and updatedAt !=''">
			updatedAt = #{updatedAt}
		</if>
		WHERE serviceId=#{serviceId}
	</update>
	<update id="updatePonit" parameterType="com.qiaomu.modules.welfare.entity.PointEntity" >
		update welfare_points_user set points = #{points}, updatedAt = #{updatedAt} WHERE userId=#{userId}
	</update>


	<delete id="deleteTaskByServiceId" parameterType="String">
		delete from welfare_task WHERE serviceId = #{serviceId}
	</delete>

</mapper>